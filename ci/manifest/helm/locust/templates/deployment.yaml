apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicas }}
  # We dont need a large deployment history limit as Helm keeps it's own
  # history
  revisionHistoryLimit: 2
  template:
    metadata:
      namespace: {{ .Values.namespace }}
      labels:
        app: {{ template "fullname" . }}
        release: "{{ .Release.Name }}"
    spec:
      containers:
      - name: server
        image: {{ template "docker-image" . }}
        imagePullPolicy: Always
        ports:
        # The port that our container listens for HTTP requests on
        - containerPort: {{ .Values.dockerPort }}
          name: http
        env:
          - name: JAVA_OPTS
            value: -Dspring.profiles.active={{ .Values.profile }} -Xms512m -Xmx2048m
          - name: SECRETS_STOCK_SERVERNAME
            valueFrom:
                 secretKeyRef:
                    name: kv-secrets
                    key:  sql-server-0001-server-name
          - name: SECRETS_ADMIN_USERNAME
            valueFrom:
                 secretKeyRef:
                    name: kv-secrets
                    key:  sql-server-0001-admin-username
          - name: SECRETS_ADMIN_PASSWORD
            valueFrom:
                 secretKeyRef:
                    name: kv-secrets
                    key:  sql-server-0001-admin-password
          - name: SECRETS_STOCK_USERNAME1
            valueFrom:
                secretKeyRef:
                    name: user-secrets
                    key:  username1
          - name: SECRETS_STOCK_PASSWORD1
            valueFrom:
                secretKeyRef:
                    name: user-secrets
                    key:  password1
          - name: SECRETS_STOCK_USERNAME2
            valueFrom:
                secretKeyRef:
                    name: user-secrets
                    key:  username2
          - name: SECRETS_STOCK_PASSWORD2
            valueFrom:
                secretKeyRef:
                    name: user-secrets
                    key:  password2
          - name: SECRETS_STOCK_USERNAME3
            valueFrom:
                secretKeyRef:
                    name: user-secrets
                    key:  username3
          - name: SECRETS_STOCK_PASSWORD3
            valueFrom:
                secretKeyRef:
                    name: user-secrets
                    key:  password3
      {{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ template "fullname" . }}
              topologyKey: kubernetes.io/hostname
